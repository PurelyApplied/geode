// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Dependency versions
def antlr_version = '2.7.7'
def assertj_core_version = '3.10.0'
def awaitility_version = '3.1.1'
def bcel_version = '6.2'
def catch_exception_version = '1.4.4'
def catch_throwable_version = '1.4.4'
def cglib_version = '3.2.7'
def classgraph_version = '4.0.6'
def commons_beanutils_version = '1.9.3'
def commons_collections_version = '3.2.2'
def commons_configuration_version = '1.10'
def commons_digester_version = '2.1'
def commons_fileupload_version = '1.3.3'
def commons_io_version = '2.6'
def commons_lang_version = '2.6'
def commons_logging_version = '1.2'
def commons_modeler_version = '2.0.1'
def commons_validator_version = '1.6'
def HikariCP_version = '3.2.0'
def derby_version = '10.14.2.0'
def fastutil_version = '8.2.1'
def guava_version = '25.1-jre'
def hamcrest_all_version = '1.3'
def httpclient_version = '4.5.6'
def httpunit_version = '1.7.2'
def jackson_version = '2.9.6'
def jackson_module_scala_2_10_version = '2.9.6'
def jansi_version = '1.17.1'
def javax_ejb_api_version = '3.0'
def javax_jsr250_api_version = '1.0'
def javax_mail_api_version = '1.6.1'
def javax_persistence_api_version = '2.2.0'
def javax_resource_api_version = '1.7'
def javax_servlet_api_version = '3.1.0'
def javax_transaction_api_version = '1.2'
def jedis_version = '2.9.0'
// The jetty version is also hard-coded in geode-assembly:test
// at o.a.g.sessions.tests.GenericAppServerInstall.java
def jetty_version = '9.4.8.v20171121'
def jgroups_version = '3.6.14.Final'
def jmock_version = '2.8.4'
def jna_version = '4.1.0'
def jopt_simple_version = '5.0.4'
def json_path_version = '2.4.0'
def json_path_assert_version = '2.2.0'
def junit_version = '4.12'
def junit_quickcheck_version = '0.8.1'
def JUnitParams_version = '1.1.0'
def log4j_version = '2.11.0'
def lucene_version = '6.6.2'
def mockito_core_version = '2.19.1'
def mockrunner_version = '1.1.2'
def mortbay_jetty_servlet_api_version = '3.0.20100224'
def multithreadedtc_version = '1.01'
def mx4j_version = '3.0.2'
def mx4j_remote_version = '3.0.2'
def mx4j_tools_version = '3.0.1'
def netty_all_version = '4.1.27.Final'
def powermock_version = '2.0.0-beta.5'
def protobuf_gradle_plugin_version = '0.8.6'
def protobuf_java_version = '3.6.0'
def protoc_version = '3.6.0'
def rmiio_version = '2.1.2'
def selenium_version = '3.13.0'
def shiro_version = '1.4.0'
def slf4j_api_version = '1.7.25'
def snappy_java_version = '0.4'
def spring_hateoas_version = '0.24.0.RELEASE'
def spring_ldap_core_version = '2.3.2.RELEASE'
def spring_security_version = '4.2.7.RELEASE'
def spring_shell_version = '1.2.0.RELEASE'
def spring_tx_version = '4.3.18.RELEASE'
def springframework_version = '4.3.18.RELEASE'
def spymemcached_version = '2.12.2'
def springfox_version = '2.9.2'
def stephenc_findbugs_version = '1.3.9_1'
def system_rules_version = '1.18.0'
def tempus_fugit_version = '1.1'
// Multiple versions of tomcat are hard-coded in geode-assembly:test
// at o.a.g.session.tests.TomcatInstall
def tomcat6_version = '6.0.37'
def tomcat7_version = '7.0.73'
def tomcat8_version = '8.5.9'
def xercesImpl_version = '2.12.0'

dependencies{
  constraints {

//    annotationProcessor('org.apache.logging.log4j:log4j-core:' + log4j_version)
//    antlr('antlr:antlr:' + antlr_version)
//    classpath('com.google.protobuf:protobuf-gradle-plugin:' + protobuf_gradle_plugin_version)
    compile('antlr:antlr:' + antlr_version)
    compile('com.fasterxml.jackson.core:jackson-annotations:' + jackson_version)
    compile('com.fasterxml.jackson.core:jackson-core:' + jackson_version)
    compile('com.fasterxml.jackson.core:jackson-databind:' + jackson_version)
    compile('com.fasterxml.jackson.module:jackson-module-scala_2.10:' + jackson_module_scala_2_10_version)
    compile('com.github.stefanbirkner:system-rules:' + system_rules_version)
    compile('com.github.stephenc.findbugs:findbugs-annotations:' + stephenc_findbugs_version)
    compile('com.google.guava:guava:' + guava_version)
    compile('com.google.protobuf:protobuf-java:' + protobuf_java_version)
    compile('com.healthmarketscience.rmiio:rmiio:' + rmiio_version)
    compile('com.jayway.jsonpath:json-path:' + json_path_version)
    compile('commons-beanutils:commons-beanutils:' + commons_beanutils_version)
    compile('commons-collections:commons-collections:' + commons_collections_version)
    compile('commons-digester:commons-digester:' + commons_digester_version)
    compile('commons-fileupload:commons-fileupload:' + commons_fileupload_version)
    compile('commons-io:commons-io:' + commons_io_version)
    compile('commons-lang:commons-lang:' + commons_lang_version)
    compile('commons-modeler:commons-modeler:' + commons_modeler_version)
    compile('commons-validator:commons-validator:' + commons_validator_version)
    compile('eu.codearte.catch-exception:catch-exception:' + catch_exception_version)
    compile('eu.codearte.catch-exception:catch-throwable:' + catch_throwable_version)
    compile('io.github.classgraph:classgraph:' + classgraph_version)
    compile('io.netty:netty-all:' + netty_all_version)
    compile('io.springfox:springfox-swagger-ui:' + springfox_version)
    compile('io.springfox:springfox-swagger2:' + springfox_version)
    compile('it.unimi.dsi:fastutil:' + fastutil_version)
    compile('javax.mail:javax.mail-api:' + javax_mail_api_version)
    compile('javax.resource:javax.resource-api:' + javax_resource_api_version)
    compile('junit:junit:' + junit_version)
    compile('mx4j:mx4j-remote:' + mx4j_remote_version)
    compile('mx4j:mx4j-tools:' + mx4j_tools_version)
    compile('mx4j:mx4j:' + mx4j_version)
    compile('net.java.dev.jna:jna:' + jna_version)
    compile('net.sf.jopt-simple:jopt-simple:' + jopt_simple_version)
    compile('org.apache.logging.log4j:log4j-api:' + log4j_version)
    compile('org.apache.logging.log4j:log4j-core:' + log4j_version)
    compile('org.apache.logging.log4j:log4j-jcl:' + log4j_version)
    compile('org.apache.lucene:lucene-analyzers-common:' + lucene_version)
    compile('org.apache.lucene:lucene-queryparser:' + lucene_version)
    compile('org.apache.lucene:lucene-test-framework:' + lucene_version)
    compile('org.apache.shiro:shiro-core:' + shiro_version)
    compile('org.apache.tomcat:catalina-ha:' + tomcat6_version)
    compile('org.apache.tomcat:juli:' + tomcat6_version)
    compile('org.apache.tomcat:tomcat-catalina:' + tomcat7_version)
    compile('org.apache.tomcat:tomcat-catalina:' + tomcat8_version)
    compile('org.apache.tomcat:tomcat-coyote:' + tomcat7_version)
    compile('org.apache.tomcat:tomcat-coyote:' + tomcat8_version)
    compile('org.apache.tomcat:tomcat-juli:' + tomcat7_version)
    compile('org.apache.tomcat:tomcat-juli:' + tomcat8_version)
    compile('org.assertj:assertj-core:' + assertj_core_version)
    compile('org.awaitility:awaitility:' + awaitility_version)
    compile('org.eclipse.jetty:jetty-webapp:' + jetty_version)
    compile('org.hamcrest:hamcrest-all:' + hamcrest_all_version)
    compile('org.httpunit:httpunit:' + httpunit_version)
    compile('org.iq80.snappy:snappy:' + snappy_java_version)
    compile('org.jgroups:jgroups:' + jgroups_version)
    compile('org.mockito:mockito-core:' + mockito_core_version)
    compile('org.seleniumhq.selenium:selenium-api:' + selenium_version)
    compile('org.seleniumhq.selenium:selenium-chrome-driver:' + selenium_version)
    compile('org.seleniumhq.selenium:selenium-support:' + selenium_version)
    compile('org.slf4j:slf4j-api:' + slf4j_api_version)
    compile('org.springframework.hateoas:spring-hateoas:' + spring_hateoas_version)
    compile('org.springframework.ldap:spring-ldap-core:' + spring_ldap_core_version)
    compile('org.springframework.security:spring-security-config:' + spring_security_version)
    compile('org.springframework.security:spring-security-core:' + spring_security_version)
    compile('org.springframework.security:spring-security-ldap:' + spring_security_version)
    compile('org.springframework.security:spring-security-web:' + spring_security_version)
    compile('org.springframework.shell:spring-shell:' + spring_shell_version)
    compile('org.springframework:spring-aspects:' + springframework_version)
    compile('org.springframework:spring-beans:' + springframework_version)
    compile('org.springframework:spring-context:' + springframework_version)
    compile('org.springframework:spring-context:' + springframework_version)
    compile('org.springframework:spring-core:' + springframework_version)
    compile('org.springframework:spring-oxm:' + springframework_version)
    compile('org.springframework:spring-tx:' + spring_tx_version)
    compile('org.springframework:spring-web:' + springframework_version)
    compile('org.springframework:spring-web:' + springframework_version)
    compile('org.springframework:spring-webmvc:' + springframework_version)
    compileOnly('com.fasterxml.jackson.core:jackson-databind:' + jackson_version)
    compileOnly('commons-io:commons-io:' + commons_io_version)
    compileOnly('javax.servlet:javax.servlet-api:' + javax_servlet_api_version)
    compileOnly('junit:junit:' + junit_version)
    compileOnly('org.apache.httpcomponents:httpclient:' + httpclient_version)
    compileOnly('org.apache.logging.log4j:log4j-api:' + log4j_version)
    compileOnly('org.apache.tomcat:catalina-ha:' + tomcat6_version)
    compileOnly('org.assertj:assertj-core:' + assertj_core_version)
    compileOnly('org.mortbay.jetty:servlet-api:' + mortbay_jetty_servlet_api_version)
    compileOnly('org.springframework:spring-webmvc:' + springframework_version)
    distributedTestCompile('com.jayway.jsonpath:json-path-assert:' + json_path_assert_version)
    distributedTestCompile('org.apache.httpcomponents:httpclient:' + httpclient_version)
    distributedTestCompile('pl.pragmatists:JUnitParams:' + JUnitParams_version)
    distributedTestCompile('redis.clients:jedis:' + jedis_version)
    distributedTestRuntime('org.apache.derby:derby:' + derby_version)
    distributedTestRuntime('org.springframework:spring-webmvc:' + springframework_version)
//    gfshDependencies('org.springframework:spring-web:' + springframework_version)
    integrationTestCompile('com.mockrunner:mockrunner-servlet:' + mockrunner_version)
    integrationTestCompile('javax.servlet:javax.servlet-api:' + javax_servlet_api_version)
    integrationTestCompile('net.spy:spymemcached:' + spymemcached_version)
    integrationTestCompile('org.apache.bcel:bcel:' + bcel_version)
    integrationTestCompile('org.apache.httpcomponents:httpclient:' + httpclient_version)
    integrationTestCompile('org.apache.lucene:lucene-analyzers-phonetic:' + lucene_version)
    integrationTestCompile('org.awaitility:awaitility:' + awaitility_version)
    integrationTestCompile('org.httpunit:httpunit:' + httpunit_version)
    integrationTestCompile('org.jmock:jmock-junit4:' + jmock_version)
    integrationTestCompile('org.jmock:jmock-legacy:' + jmock_version)
    integrationTestCompile('org.mockito:mockito-core:' + mockito_core_version)
    integrationTestCompile('org.powermock:powermock-api-mockito2:' + powermock_version)
    integrationTestCompile('org.powermock:powermock-core:' + powermock_version)
    integrationTestCompile('org.powermock:powermock-module-junit4:' + powermock_version)
    integrationTestCompile('org.slf4j:slf4j-api:' + slf4j_api_version)
    integrationTestCompile('org.springframework:spring-test:' + springframework_version)
    integrationTestCompile('pl.pragmatists:JUnitParams:' + JUnitParams_version)
    integrationTestCompile('redis.clients:jedis:' + jedis_version)
    integrationTestRuntime('javax.annotation:jsr250-api:' + javax_jsr250_api_version)
    integrationTestRuntime('javax.ejb:ejb-api:' + javax_ejb_api_version)
    integrationTestRuntime('javax.servlet:javax.servlet-api:' + javax_servlet_api_version)
    integrationTestRuntime('org.apache.derby:derby:' + derby_version)
    integrationTestRuntime('org.apache.tomcat:coyote:' + tomcat6_version)
    integrationTestRuntime('org.eclipse.persistence:javax.persistence:' + javax_persistence_api_version)
    integrationTestRuntime('org.springframework:spring-webmvc:' + springframework_version)
    integrationTestRuntime('xerces:xercesImpl:' + xercesImpl_version)
//    jcaAnnotationProcessor('org.apache.logging.log4j:log4j-core:' + log4j_version)
    providedCompile('commons-logging:commons-logging:' + commons_logging_version)
    runtime('commons-fileupload:commons-fileupload:' + commons_fileupload_version)
    runtime('org.apache.logging.log4j:log4j-jcl:' + log4j_version)
    runtime('org.apache.logging.log4j:log4j-jul:' + log4j_version)
    runtime('org.apache.logging.log4j:log4j-slf4j-impl:' + log4j_version)
    runtime('org.apache.lucene:lucene-analyzers-phonetic:' + lucene_version)
    runtime('org.fusesource.jansi:jansi:' + jansi_version)
    runtime('org.slf4j:slf4j-api:' + slf4j_api_version)
    runtime('org.springframework:spring-aspects:' + springframework_version)
    runtime('org.springframework:spring-expression:' + springframework_version)
    runtime('org.springframework:spring-oxm:' + springframework_version)
    runtime('org.springframework:spring-webmvc:' + springframework_version)
//    slf4jDeps('org.slf4j:slf4j-api:' + slf4j_api_version)
//    slf4jDeps('org.slf4j:slf4j-jdk14:' + slf4j_api_version)
    testCompile('com.github.stefanbirkner:system-rules:' + system_rules_version)
    testCompile('com.google.code.tempus-fugit:tempus-fugit:' + tempus_fugit_version)
    testCompile('com.pholser:junit-quickcheck-core:' + junit_quickcheck_version)
    testCompile('com.pholser:junit-quickcheck-generators:' + junit_quickcheck_version)
    testCompile('edu.umd.cs.mtc:multithreadedtc:' + multithreadedtc_version)
    testCompile('eu.codearte.catch-exception:catch-exception:' + catch_exception_version)
    testCompile('eu.codearte.catch-exception:catch-throwable:' + catch_throwable_version)
    testCompile('javax.servlet:javax.servlet-api:' + javax_servlet_api_version)
    testCompile('junit:junit:' + junit_version)
    testCompile('org.apache.bcel:bcel:' + bcel_version)
    testCompile('org.apache.lucene:lucene-test-framework:' + lucene_version)
    testCompile('org.assertj:assertj-core:' + assertj_core_version)
    testCompile('org.awaitility:awaitility:' + awaitility_version)
    testCompile('org.hamcrest:hamcrest-all:' + hamcrest_all_version)
    testCompile('org.jmock:jmock-junit4:' + jmock_version)
    testCompile('org.jmock:jmock-legacy:' + jmock_version)
    testCompile('org.mockito:mockito-core:' + mockito_core_version)
    testCompile('org.powermock:powermock-api-mockito2:' + powermock_version)
    testCompile('org.powermock:powermock-core:' + powermock_version)
    testCompile('org.powermock:powermock-module-junit4:' + powermock_version)
    testCompile('org.springframework:spring-test:' + springframework_version)
    testCompile('org.springframework:spring-webmvc:' + springframework_version)
    testCompile('pl.pragmatists:JUnitParams:' + JUnitParams_version)
    testRuntime('cglib:cglib:' + cglib_version)
    testRuntime('com.pholser:junit-quickcheck-generators:' + junit_quickcheck_version)
    testRuntime('commons-collections:commons-collections:' + commons_collections_version)
    testRuntime('commons-configuration:commons-configuration:' + commons_configuration_version)
    testRuntime('commons-io:commons-io:' + commons_io_version)
    testRuntime('commons-validator:commons-validator:' + commons_validator_version)
    uiTestCompile('org.seleniumhq.selenium:selenium-api:' + selenium_version)
    uiTestCompile('org.seleniumhq.selenium:selenium-remote-driver:' + selenium_version)
    uiTestCompile('org.seleniumhq.selenium:selenium-support:' + selenium_version)
    uiTestRuntime('org.seleniumhq.selenium:selenium-chrome-driver:' + selenium_version)
    upgradeTestRuntime('org.apache.httpcomponents:httpclient:' + httpclient_version)
  }
}